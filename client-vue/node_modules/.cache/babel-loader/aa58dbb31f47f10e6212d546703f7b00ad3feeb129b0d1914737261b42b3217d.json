{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport ProductDataService from '@/services/ProductDataService';\nexport default {\n  props: ['inventory', 'updateInventory'],\n  data() {\n    return {\n      // product: {},\n      product: {\n        name: '',\n        photo: '',\n        price: '',\n        description: '',\n        categorie: ''\n      },\n      id: parseInt(this.$route.params.id)\n    };\n  },\n  methods: {\n    updateProduct() {\n      ProductDataService.update(this.id, this.product).then(() => {\n        this.updateInventory(this.productIndex, this.product);\n        this.$router.push({\n          name: 'catalogue'\n        });\n      });\n    }\n  },\n  computed: {\n    productIndex() {\n      const index = this.inventory.findIndex(p => {\n        return p.id === this.id;\n      });\n      return index;\n    }\n  },\n  mounted() {\n    ProductDataService.get(this.id).then(response => {\n      this.product = response.data;\n    });\n  }\n};","map":{"version":3,"mappings":";AA4CA,OAAOA,kBAAiB,MAAO,+BAA8B;AAC7D,eAAe;EACbC,KAAK,EAAE,CAAC,WAAW,EAAE,iBAAiB,CAAC;EACvCC,IAAG,GAAK;IACN,OAAO;MACL;MACAC,OAAO,EAAE;QACPC,IAAI,EAAE,EAAE;QACRC,KAAK,EAAE,EAAE;QACTC,KAAK,EAAE,EAAE;QACTC,WAAW,EAAE,EAAE;QACfC,SAAS,EAAE;MACb,CAAC;MACDC,EAAE,EAAEC,QAAQ,CAAC,IAAI,CAACC,MAAM,CAACC,MAAM,CAACH,EAAE;IACpC;EACF,CAAC;EACDI,OAAO,EAAE;IACPC,aAAY,GAAK;MACfd,kBAAkB,CAACe,MAAM,CAAC,IAAI,CAACN,EAAE,EAAE,IAAI,CAACN,OAAO,EAC5Ca,IAAI,CAAC,MAAM;QACV,IAAI,CAACC,eAAe,CAAC,IAAI,CAACC,YAAY,EAAE,IAAI,CAACf,OAAO;QACpD,IAAI,CAACgB,OAAO,CAACC,IAAI,CAAC;UAAEhB,IAAI,EAAE;QAAY,CAAC;MACzC,CAAC;IACL;EACF,CAAC;EACDiB,QAAQ,EAAE;IACRH,YAAW,GAAK;MACd,MAAMI,KAAI,GAAI,IAAI,CAACC,SAAS,CAACC,SAAS,CAAEC,CAAC,IAAK;QAC5C,OAAOA,CAAC,CAAChB,EAAC,KAAM,IAAI,CAACA,EAAC;MACxB,CAAC;MACD,OAAOa,KAAI;IACb;EACF,CAAC;EACDI,OAAM,GAAK;IACT1B,kBAAkB,CAAC2B,GAAG,CAAC,IAAI,CAAClB,EAAE,EAC3BO,IAAI,CAACY,QAAO,IAAK;MAChB,IAAI,CAACzB,OAAM,GAAIyB,QAAQ,CAAC1B,IAAG;IAC7B,CAAC;EACL;AACF","names":["ProductDataService","props","data","product","name","photo","price","description","categorie","id","parseInt","$route","params","methods","updateProduct","update","then","updateInventory","productIndex","$router","push","computed","index","inventory","findIndex","p","mounted","get","response"],"sourceRoot":"","sources":["/Applications/MAMP/htdocs/JS_FRAMEWORKS/TP3/ecommerce-vuejs-hk/client-vue/src/views/EditProductView.vue"],"sourcesContent":["<template>\r\n  <div class=\"container m-5\">\r\n    <h1 class=\"fs-2\">Modification produit #{{ product.id }}</h1>\r\n\r\n    <!-- Bouton Enregistrer/Annuler -->\r\n    <div className=\"col-xs-12 d-flex justify-content-end\">\r\n      <button type=\"submit\" className=\"btn btn-outline-primary me-2\" @click=\"updateProduct\">\r\n        <i className=\"bi bi-check fs-5\"></i>\r\n      </button>\r\n      <router-link className=\"btn btn-outline-danger\" to=\"/produits\">\r\n        <i className=\"bi bi-x fs-5\"></i>\r\n      </router-link>\r\n    </div>\r\n\r\n    <!-- Formulaire de modification -->\r\n    <form className=\"add-form m-5 was-validated\" novalidate>\r\n\r\n      <!-- <div className=\"input-group mb-3\"> -->\r\n      <input className=\"form-control form-control-m m-3\" type=\"text\" placeholder=\"Nom\" v-model=\"product.name\" required />\r\n      <!-- <input className=\"form-control form-control-m m-3\" type=\"text\" placeholder=\"Catégorie\" v-model=\"product.categorie\" required /> -->\r\n      <select\r\n        class=\"form-control form-control-m m-3\"\r\n        placeholder=\"\"\r\n        v-model=\"product.categorie\"\r\n        required\r\n      >\r\n        <option class=\"option\" value=\"\" disabled>Catégorie</option>\r\n        <option class=\"option\" value=\"Plantes\">Plantes</option>\r\n        <option class=\"option\" value=\"Fleurs\">Fleurs</option>\r\n        <option class=\"option\" value=\"Accessoirs\">Accessoirs</option>\r\n      </select>\r\n      <!-- </div> -->\r\n      <!-- <div className=\"input-group mb-3\"> -->\r\n      <input className=\"form-control form-control-m m-3\" type=\"number\" placeholder=\"Prix\" v-model.number=\"product.price\" required />\r\n      <input className=\"form-control form-control-m m-3\" type=\"text\" placeholder=\"photo.jpeg\" v-model=\"product.photo\" required />\r\n      <!-- </div> -->\r\n      <textarea className=\"form-control form-control-m m-3\" placeholder=\"Description\" v-model=\"product.description\" required></textarea>\r\n\r\n    </form>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport ProductDataService from '@/services/ProductDataService'\r\nexport default {\r\n  props: ['inventory', 'updateInventory'],\r\n  data () {\r\n    return {\r\n      // product: {},\r\n      product: {\r\n        name: '',\r\n        photo: '',\r\n        price: '',\r\n        description: '',\r\n        categorie: ''\r\n      },\r\n      id: parseInt(this.$route.params.id)\r\n    }\r\n  },\r\n  methods: {\r\n    updateProduct () {\r\n      ProductDataService.update(this.id, this.product)\r\n        .then(() => {\r\n          this.updateInventory(this.productIndex, this.product)\r\n          this.$router.push({ name: 'catalogue' })\r\n        })\r\n    }\r\n  },\r\n  computed: {\r\n    productIndex () {\r\n      const index = this.inventory.findIndex((p) => {\r\n        return p.id === this.id\r\n      })\r\n      return index\r\n    }\r\n  },\r\n  mounted () {\r\n    ProductDataService.get(this.id)\r\n      .then(response => {\r\n        this.product = response.data\r\n      })\r\n  }\r\n}\r\n</script>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}