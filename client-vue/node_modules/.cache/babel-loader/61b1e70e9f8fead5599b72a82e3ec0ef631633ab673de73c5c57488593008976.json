{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  props: ['inventory'],\n  methods: {\n    updateProduct() {\n      ProductDataService.update(this.id, this.product).then(response => {\n        this.updateInv(this.productIndex, this.product);\n        this.submitted = true;\n      });\n    },\n    deleteProduct() {\n      ProductDataService.delete(this.id).then(response => {\n        this.removeInv(this.productIndex);\n        this.remove(this.product.name);\n        this.$router.push({\n          name: 'home'\n        });\n      });\n    }\n  },\n  computed: {\n    productIndex() {\n      const index = this.inventory.findIndex(p => {\n        return p.id === this.id;\n      });\n      return index;\n    }\n  }\n};","map":{"version":3,"mappings":";AAgDA,eAAe;EACbA,KAAK,EAAE,CAAC,WAAW,CAAC;EAEpBC,OAAO,EAAE;IACPC,aAAa,GAAG;MACdC,kBAAkB,CAACC,MAAM,CAAC,IAAI,CAACC,EAAE,EAAE,IAAI,CAACC,OAAO,EAC5CC,IAAI,CAACC,QAAO,IAAK;QAChB,IAAI,CAACC,SAAS,CAAC,IAAI,CAACC,YAAY,EAAE,IAAI,CAACJ,OAAO;QAC9C,IAAI,CAACK,SAAQ,GAAI,IAAG;MACtB,CAAC;IACL,CAAC;IACDC,aAAa,GAAG;MACdT,kBAAkB,CAACU,MAAM,CAAC,IAAI,CAACR,EAAE,EAC9BE,IAAI,CAACC,QAAO,IAAK;QAChB,IAAI,CAACM,SAAS,CAAC,IAAI,CAACJ,YAAY;QAChC,IAAI,CAACK,MAAM,CAAC,IAAI,CAACT,OAAO,CAACU,IAAI;QAC7B,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC;UAAEF,IAAI,EAAE;QAAO,CAAC;MACpC,CAAC;IACL;EACF,CAAC;EACDG,QAAQ,EAAE;IACRT,YAAY,GAAG;MACb,MAAMU,KAAI,GAAI,IAAI,CAACC,SAAS,CAACC,SAAS,CAAEC,CAAC,IAAK;QAC5C,OAAOA,CAAC,CAAClB,EAAC,KAAM,IAAI,CAACA,EAAC;MACxB,CAAC;MACD,OAAOe,KAAI;IACb;EACF;AACF","names":["props","methods","updateProduct","ProductDataService","update","id","product","then","response","updateInv","productIndex","submitted","deleteProduct","delete","removeInv","remove","name","$router","push","computed","index","inventory","findIndex","p"],"sourceRoot":"","sources":["/Applications/MAMP/htdocs/JS_FRAMEWORKS/TP3/ecommerce-vuejs-hk/client-vue/src/views/ProductsView.vue"],"sourcesContent":["<template>\n  <div class=\"container m-5\">\n    <h1 class=\"fs-2\">Page de Produits</h1>\n\n    <!-- Bouton d'ajout -->\n    <div className=\"col-xs-12 d-flex justify-content-end\">\n      <router-link className=\"btn btn-outline-primary\" to=\"/add-product\">\n        <i className=\"bi bi-plus fs-5\"></i>\n      </router-link>\n    </div>\n\n    <!-- Tableau de produits -->\n    <table className=\"table mt-5\">\n      <thead>\n        <tr>\n          <th scope=\"col\">#</th>\n          <th scope=\"col\" className=\"pe-4\">Image</th>\n          <th scope=\"col\" className=\"pe-4\">Nom</th>\n          <th scope=\"col\" className=\"pe-4\">Cat√©gorie</th>\n          <th scope=\"col\" className=\"pe-4\">Description</th>\n          <th scope=\"col\" className=\"ps-3 pe-5\">Prix</th>\n          <th scope=\"col\"></th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr v-for=\"product in inventory\" :key=\"product.id\">\n          <th scope=\"row\">{{ product.id }}</th>\n          <td class=\"img-td-container\"><img class=\"img-thumbnail\" :src=\"'/img/'                                       +                                       product.photo\" alt=\"\" /></td>\n          <td>{{ product.name }}</td>\n          <td>{{ product.categorie }}</td>\n          <td>{{ product.description }}</td>\n          <td className=\"text-nowrap ps-3\">{{ product.price }} $</td>\n          <td className=\"align-middle\">\n            <div className=\"d-flex justify-content-end align-items-center\">\n              <button className=\"btn btn-outline-primary me-2\" data-bs-target=\"#editModal\">\n                <i className=\"bi bi-pencil-fill\"></i>\n              </button>\n              <button className=\"btn btn-outline-danger\">\n                <i className=\"bi bi-trash-fill\"></i>\n              </button>\n            </div>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</template>\n<script>\nexport default {\n  props: ['inventory'],\n\n  methods: {\n    updateProduct() {\n      ProductDataService.update(this.id, this.product)\n        .then(response => {\n          this.updateInv(this.productIndex, this.product)\n          this.submitted = true\n        })\n    },\n    deleteProduct() {\n      ProductDataService.delete(this.id)\n        .then(response => {\n          this.removeInv(this.productIndex)\n          this.remove(this.product.name)\n          this.$router.push({ name: 'home' })\n        })\n    }\n  },\n  computed: {\n    productIndex() {\n      const index = this.inventory.findIndex((p) => {\n        return p.id === this.id\n      })\n      return index\n    }\n  },\n}\n\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}