{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport ProductDataService from '@/services/ProductDataService';\nexport default {\n  props: ['addInventory'],\n  data() {\n    return {\n      // TODO : VALIDATION\n      // https://codersdiaries.com/blog/vue-js-form-validation\n      nameError: false,\n      photoError: false,\n      priceError: false,\n      descriptionError: false,\n      categorieError: false,\n      // TODO : VALIDATION\n      errors: [],\n      product: {\n        name: '',\n        photo: '',\n        price: '',\n        description: '',\n        categorie: ''\n      }\n    };\n  },\n  methods: {\n    // TODO : VALIDATION\n    // validate () {\n    //   if (!this.name) {\n    //     this.nameError = true\n    //   } else {\n    //     document.getElementById('name').className = 'form-control is-valid'\n    //   }\n    // },\n    validate() {\n      'use strict';\n\n      // Fetch all the forms we want to apply custom Bootstrap validation styles to\n      var forms = document.querySelectorAll('.needs-validation');\n\n      // Loop over them and prevent submission\n      Array.prototype.slice.call(forms).forEach(function (form) {\n        form.addEventListener('submit', function (event) {\n          if (!form.checkValidity()) {\n            event.preventDefault();\n            event.stopPropagation();\n          }\n          form.classList.add('was-validated');\n        }, false);\n      });\n    },\n    saveProduct() {\n      ProductDataService.create(this.product).then(response => {\n        this.product.id = response.data.id;\n        this.addInventory(this.product);\n        this.$router.push({\n          name: 'catalogue'\n        });\n      });\n    }\n  }\n};","map":{"version":3,"mappings":";AA2CA,OAAOA,kBAAiB,MAAO,+BAA8B;AAC7D,eAAe;EACbC,KAAK,EAAE,CAAC,cAAc,CAAC;EACvBC,IAAG,GAAK;IACN,OAAO;MACL;MACA;MACAC,SAAS,EAAE,KAAK;MAChBC,UAAU,EAAE,KAAK;MACjBC,UAAU,EAAE,KAAK;MACjBC,gBAAgB,EAAE,KAAK;MACvBC,cAAc,EAAE,KAAK;MAErB;MACAC,MAAM,EAAE,EAAE;MAEVC,OAAO,EAAE;QACPC,IAAI,EAAE,EAAE;QACRC,KAAK,EAAE,EAAE;QACTC,KAAK,EAAE,EAAE;QACTC,WAAW,EAAE,EAAE;QACfC,SAAS,EAAE;MACb;IACF;EACF,CAAC;EACDC,OAAO,EAAE;IACP;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACAC,QAAO,GAAK;MACV,YAAW;;MAEX;MACA,IAAIC,KAAI,GAAIC,QAAQ,CAACC,gBAAgB,CAAC,mBAAmB;;MAEzD;MACAC,KAAK,CAACC,SAAS,CAACC,KAAK,CAACC,IAAI,CAACN,KAAK,EAC7BO,OAAO,CAAC,UAAUC,IAAI,EAAE;QACvBA,IAAI,CAACC,gBAAgB,CAAC,QAAQ,EAAE,UAAUC,KAAK,EAAE;UAC/C,IAAI,CAACF,IAAI,CAACG,aAAa,EAAE,EAAE;YACzBD,KAAK,CAACE,cAAc,EAAC;YACrBF,KAAK,CAACG,eAAe,EAAC;UACxB;UAEAL,IAAI,CAACM,SAAS,CAACC,GAAG,CAAC,eAAe;QACpC,CAAC,EAAE,KAAK;MACV,CAAC;IACL,CAAC;IACDC,WAAU,GAAK;MACbjC,kBAAkB,CAACkC,MAAM,CAAC,IAAI,CAACzB,OAAO,EACnC0B,IAAI,CAACC,QAAO,IAAK;QAChB,IAAI,CAAC3B,OAAO,CAAC4B,EAAC,GAAID,QAAQ,CAAClC,IAAI,CAACmC,EAAC;QACjC,IAAI,CAACC,YAAY,CAAC,IAAI,CAAC7B,OAAO;QAC9B,IAAI,CAAC8B,OAAO,CAACC,IAAI,CAAC;UAAE9B,IAAI,EAAE;QAAY,CAAC;MACzC,CAAC;IACL;EACF;AACF","names":["ProductDataService","props","data","nameError","photoError","priceError","descriptionError","categorieError","errors","product","name","photo","price","description","categorie","methods","validate","forms","document","querySelectorAll","Array","prototype","slice","call","forEach","form","addEventListener","event","checkValidity","preventDefault","stopPropagation","classList","add","saveProduct","create","then","response","id","addInventory","$router","push"],"sourceRoot":"","sources":["/Applications/MAMP/htdocs/JS_FRAMEWORKS/TP3/ecommerce-vuejs-hk/client-vue/src/views/AddProductView.vue"],"sourcesContent":["<template>\r\n  <div class=\"container m-5\">\r\n    <h1 class=\"fs-2\">Nouveau produit</h1>\r\n\r\n    <!-- Bouton Enregistrer/Annuler -->\r\n    <div class=\"col-xs-12 d-flex justify-content-end\">\r\n      <button type=\"submit\" class=\"btn btn-outline-primary me-2\" @click=\"saveProduct\">\r\n        <i class=\"bi bi-check fs-5\"></i>\r\n      </button>\r\n      <router-link class=\"btn btn-outline-danger\" to=\"/produits\">\r\n        <i class=\"bi bi-x fs-5\"></i>\r\n      </router-link>\r\n    </div>\r\n\r\n    <!-- Formulaire d'ajout -->\r\n    <form class=\"add-form m-5 was-validated\" novalidate>\r\n\r\n      <!-- TODO : VALIDATION -->\r\n      <input class=\"form-control form-control-m m-3\" type=\"text\" placeholder=\"Nom\" v-model=\"product.name\" required/>\r\n        <!-- v-bind:class=\"{ 'is-invalid': nameError }\" -->\r\n        <!-- <span class=\"invalid-feedback mt-1 ms-5\">\r\n          Nom requis\r\n        </span> -->\r\n\r\n      <select class=\"form-control form-control-m m-3\" placeholder=\"\" v-model=\"product.categorie\" required>\r\n        <option class=\"option\" value=\"\" disabled>Cat√©gorie</option>\r\n        <option class=\"option\" value=\"Plantes\">Plantes</option>\r\n        <option class=\"option\" value=\"Fleurs\">Fleurs</option>\r\n        <option class=\"option\" value=\"Accessoirs\">Accessoirs</option>\r\n      </select>\r\n\r\n      <input class=\"form-control form-control-m m-3\" type=\"number\" placeholder=\"Prix\" v-model.number=\"product.price\" required />\r\n\r\n      <input class=\"form-control form-control-m m-3\" type=\"text\" placeholder=\"photo.jpeg\" v-model=\"product.photo\" required />\r\n\r\n      <textarea class=\"form-control form-control-m m-3\" placeholder=\"Description\" v-model=\"product.description\" required></textarea>\r\n\r\n    </form>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport ProductDataService from '@/services/ProductDataService'\r\nexport default {\r\n  props: ['addInventory'],\r\n  data () {\r\n    return {\r\n      // TODO : VALIDATION\r\n      // https://codersdiaries.com/blog/vue-js-form-validation\r\n      nameError: false,\r\n      photoError: false,\r\n      priceError: false,\r\n      descriptionError: false,\r\n      categorieError: false,\r\n\r\n      // TODO : VALIDATION\r\n      errors: [],\r\n\r\n      product: {\r\n        name: '',\r\n        photo: '',\r\n        price: '',\r\n        description: '',\r\n        categorie: ''\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    // TODO : VALIDATION\r\n    // validate () {\r\n    //   if (!this.name) {\r\n    //     this.nameError = true\r\n    //   } else {\r\n    //     document.getElementById('name').className = 'form-control is-valid'\r\n    //   }\r\n    // },\r\n    validate () {\r\n      'use strict'\r\n\r\n      // Fetch all the forms we want to apply custom Bootstrap validation styles to\r\n      var forms = document.querySelectorAll('.needs-validation')\r\n\r\n      // Loop over them and prevent submission\r\n      Array.prototype.slice.call(forms)\r\n        .forEach(function (form) {\r\n          form.addEventListener('submit', function (event) {\r\n            if (!form.checkValidity()) {\r\n              event.preventDefault()\r\n              event.stopPropagation()\r\n            }\r\n\r\n            form.classList.add('was-validated')\r\n          }, false)\r\n        })\r\n    },\r\n    saveProduct () {\r\n      ProductDataService.create(this.product)\r\n        .then(response => {\r\n          this.product.id = response.data.id\r\n          this.addInventory(this.product)\r\n          this.$router.push({ name: 'catalogue' })\r\n        })\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n@import \"@/assets/override.css\";\r\n</style>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}