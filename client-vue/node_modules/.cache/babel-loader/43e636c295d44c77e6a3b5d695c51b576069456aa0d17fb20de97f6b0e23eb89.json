{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, vModelText as _vModelText, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container m-5\"\n};\nconst _hoisted_2 = {\n  class: \"fs-2\"\n};\nconst _hoisted_3 = {\n  className: \"col-xs-12 d-flex justify-content-end\"\n};\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"i\", {\n  className: \"bi bi-check fs-5\"\n}, null, -1 /* HOISTED */);\nconst _hoisted_5 = [_hoisted_4];\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"i\", {\n  className: \"bi bi-x fs-5\"\n}, null, -1 /* HOISTED */);\nconst _hoisted_7 = {\n  className: \"add-form m-5\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"h1\", _hoisted_2, \"Modification produit #\" + _toDisplayString($data.product.id), 1 /* TEXT */), _createCommentVNode(\" Bouton Enregistrer/Annuler \"), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-outline-primary me-2\",\n    onClick: _cache[0] || (_cache[0] = $event => $options.updateProduct($data.product.id))\n  }, _hoisted_5), _createVNode(_component_router_link, {\n    className: \"btn btn-outline-danger\",\n    to: \"/produits\"\n  }, {\n    default: _withCtx(() => [_hoisted_6]),\n    _: 1 /* STABLE */\n  })]), _createCommentVNode(\" Formulaire d'ajout \"), _createElementVNode(\"form\", _hoisted_7, [_createCommentVNode(\" <div className=\\\"input-group mb-3\\\"> \"), _withDirectives(_createElementVNode(\"input\", {\n    className: \"form-control form-control-m m-3\",\n    type: \"text\",\n    placeholder: \"Nom\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.product.name = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.product.name]]), _withDirectives(_createElementVNode(\"input\", {\n    className: \"form-control form-control-m m-3\",\n    type: \"text\",\n    placeholder: \"Catégorie\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.product.categorie = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.product.categorie]]), _createCommentVNode(\" </div> \"), _createCommentVNode(\" <div className=\\\"input-group mb-3\\\"> \"), _withDirectives(_createElementVNode(\"input\", {\n    className: \"form-control form-control-m m-3\",\n    type: \"number\",\n    placeholder: \"Prix\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.product.price = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.product.price, void 0, {\n    number: true\n  }]]), _withDirectives(_createElementVNode(\"input\", {\n    className: \"form-control form-control-m m-3\",\n    type: \"text\",\n    placeholder: \"photo.jpeg\",\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.product.photo = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.product.photo]]), _createCommentVNode(\" </div> \"), _withDirectives(_createElementVNode(\"textarea\", {\n    className: \"form-control form-control-m m-3\",\n    placeholder: \"Description\",\n    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $data.product.description = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.product.description]])])]);\n}","map":{"version":3,"mappings":";;EACOA,KAAK,EAAC;AAAe;;EACpBA,KAAK,EAAC;AAAM;;EAGXC,SAAS,EAAC;AAAsC;gCAEjDC,oBAAoC;EAAjCD,SAAS,EAAC;AAAkB;oBAA/BE,UAAoC;gCAGpCD,oBAAgC;EAA7BD,SAAS,EAAC;AAAc;;EAKzBA,SAAS,EAAC;AAAc;;;uBAdhCG,oBA4BM,OA5BNC,UA4BM,GA3BJH,oBAA0D,MAA1DI,UAA0D,EAAzC,wBAAsB,oBAAEC,aAAO,CAACC,EAAE,kBAEnDC,mDAAmC,EACnCP,oBAOM,OAPNQ,UAOM,GANJR,oBAES;IAFDS,IAAI,EAAC,QAAQ;IAACV,SAAS,EAAC,8BAA8B;IAAEW,OAAK,sCAAEC,sBAAa,CAACN,aAAO,CAACC,EAAE;kBAG/FM,aAEcC;IAFDd,SAAS,EAAC,wBAAwB;IAACe,EAAE,EAAC;;sBACjD,MAAgC,CAAhCC,UAAgC;;QAIpCR,2CAA2B,EAC3BP,oBAYO,QAZPgB,UAYO,GAVLT,6DAA2C,kBAC3CP,oBAAkH;IAA3GD,SAAS,EAAC,iCAAiC;IAACU,IAAI,EAAC,MAAM;IAACQ,WAAW,EAAC,KAAK;+DAAUZ,aAAO,CAACa,IAAI;IAAEC,QAAQ,EAAR;iDAAdd,aAAO,CAACa,IAAI,qBACtGlB,oBAA6H;IAAtHD,SAAS,EAAC,iCAAiC;IAACU,IAAI,EAAC,MAAM;IAACQ,WAAW,EAAC,WAAW;+DAAUZ,aAAO,CAACe,SAAS;IAAED,QAAQ,EAAR;iDAAnBd,aAAO,CAACe,SAAS,KACjHb,+BAAe,EACfA,6DAA2C,kBAC3CP,oBAA8H;IAAvHD,SAAS,EAAC,iCAAiC;IAACU,IAAI,EAAC,QAAQ;IAACQ,WAAW,EAAC,MAAM;+DAAkBZ,aAAO,CAACgB,KAAK;IAAEF,QAAQ,EAAR;iDAAfd,aAAO,CAACgB,KAAK;YAA7B;EAA8B,sBACnHrB,oBAA0H;IAAnHD,SAAS,EAAC,iCAAiC;IAACU,IAAI,EAAC,MAAM;IAACQ,WAAW,EAAC,YAAY;+DAAUZ,aAAO,CAACiB,KAAK;IAAEH,QAAQ,EAAR;iDAAfd,aAAO,CAACiB,KAAK,KAC9Gf,+BAAe,kBACfP,oBAAkI;IAAxHD,SAAS,EAAC,iCAAiC;IAACkB,WAAW,EAAC,aAAa;+DAAUZ,aAAO,CAACkB,WAAW;IAAEJ,QAAQ,EAAR;iDAArBd,aAAO,CAACkB,WAAW","names":["class","className","_createElementVNode","_hoisted_4","_createElementBlock","_hoisted_1","_hoisted_2","$data","id","_createCommentVNode","_hoisted_3","type","onClick","$options","_createVNode","_component_router_link","to","_hoisted_6","_hoisted_7","placeholder","name","required","categorie","price","photo","description"],"sourceRoot":"","sources":["/Applications/MAMP/htdocs/JS_FRAMEWORKS/TP3/ecommerce-vuejs-hk/client-vue/src/views/EditProductView.vue"],"sourcesContent":["<template>\r\n  <div class=\"container m-5\">\r\n    <h1 class=\"fs-2\">Modification produit #{{product.id}}</h1>\r\n\r\n    <!-- Bouton Enregistrer/Annuler -->\r\n    <div className=\"col-xs-12 d-flex justify-content-end\">\r\n      <button type=\"submit\" className=\"btn btn-outline-primary me-2\" @click=\"updateProduct(product.id)\">\r\n        <i className=\"bi bi-check fs-5\"></i>\r\n      </button>\r\n      <router-link className=\"btn btn-outline-danger\" to=\"/produits\">\r\n        <i className=\"bi bi-x fs-5\"></i>\r\n      </router-link>\r\n    </div>\r\n\r\n    <!-- Formulaire d'ajout -->\r\n    <form className=\"add-form m-5\">\r\n\r\n      <!-- <div className=\"input-group mb-3\"> -->\r\n      <input className=\"form-control form-control-m m-3\" type=\"text\" placeholder=\"Nom\" v-model=\"product.name\" required/>\r\n      <input className=\"form-control form-control-m m-3\" type=\"text\" placeholder=\"Catégorie\" v-model=\"product.categorie\" required/>\r\n      <!-- </div> -->\r\n      <!-- <div className=\"input-group mb-3\"> -->\r\n      <input className=\"form-control form-control-m m-3\" type=\"number\" placeholder=\"Prix\"  v-model.number=\"product.price\" required/>\r\n      <input className=\"form-control form-control-m m-3\" type=\"text\" placeholder=\"photo.jpeg\" v-model=\"product.photo\" required/>\r\n      <!-- </div> -->\r\n      <textarea className=\"form-control form-control-m m-3\" placeholder=\"Description\" v-model=\"product.description\" required></textarea>\r\n\r\n    </form>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport ProductDataService from '@/services/ProductDataService'\r\nexport default {\r\n  props: ['addInventory'],\r\n  data () {\r\n    return {\r\n      submitted: false,\r\n      product: {\r\n        name: '',\r\n        photo: '',\r\n        price: '',\r\n        description: '',\r\n        categorie: ''\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    computed: {\r\n    product () {\r\n      const product = this.inventory.find((p) => {\r\n        return p.name === this.$route.params.id\r\n      })\r\n      return product\r\n    },\r\n    productIndex () {\r\n      const index = this.inventory.findIndex((p) => {\r\n        return p.name === this.$route.params.id\r\n      })\r\n      return index\r\n    }\r\n  },\r\n    updateProduct (id) {\r\n      ProductDataService.update(this.id, this.product)\r\n        .then(response => {\r\n          this.updateInventory(this.productIndex, this.product)\r\n          this.submitted = true\r\n        })\r\n    }\r\n  },\r\n  // computed: {\r\n  //   productIndex () {\r\n  //     const index = this.inventory.findIndex((p) => {\r\n  //       return p.id === this.id\r\n  //     })\r\n  //     return index\r\n  //   }\r\n  // },\r\n  mounted () {\r\n    ProductDataService.get(this.id)\r\n      .then(response => {\r\n        this.product = response.data\r\n      })\r\n  }\r\n}\r\n</script>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}